#!/usr/bin/env ruby

require 'pp'
def print_scale( scale )
#like pp but each array is 2 characters wide plus space
  print '['
  scale.each{ |note| print note.to_s.ljust(4).upcase }
  puts']'
end

all_notes =['a','a#','b','c','c#','d','d#','e','f','f#','g','g#']
major_scale=[0,2,4,5,7,9,11]
minor_scale=[0,2,3,5,7,8,10]

# I   = Major
# II  = Minor
# III = Minor
# IV  = Major
# V   = Major
# VI  = Minor
# VII = Diminished
roman      =['I', 'II', 'III', 'IV', 'V', 'VI', 'VII']
chord      =['',   'm',   'm',   '',  '', 'm',  'dim']


target_key = 'c'

puts "All Notes"
pp all_notes

until all_notes.first == target_key do
  all_notes.rotate!
end

calc_major_scale = all_notes.select.with_index{|_,i| major_scale.member?(i) }  
calc_minor_scale = all_notes.select.with_index{|_,i| minor_scale.member?(i) }  


print "#{target_key.upcase.ljust(2)} Major Scale is: "
print_scale( calc_major_scale )

print "#{target_key.upcase.ljust(2)} Minor Scale is: "
print_scale( calc_minor_scale )


puts "Chord Progressions"
print_scale roman
print_scale (calc_major_scale.zip(chord))
